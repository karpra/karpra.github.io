[{"content":"","date":"November 15, 2022","permalink":"/categories/blog/","section":"Categories","summary":"","title":"blog"},{"content":" Warning! This post is still lame will update soon. After much procrastination i have moved the previous blog running in jekyll to hugo. I will document the steps I took to move the content to diff blog engine , but predominately used the git branch strategy to host static pages using hugo framework and migrating my content from jekyll to here.\ngraph LR; A[Blog]--\u003eB[Jekyll]; B--\u003eC[Hugo] ","date":"November 15, 2022","permalink":"/posts/hugo_blog/","section":"posts","summary":"Warning!","title":"build your own blog for free"},{"content":"","date":"November 15, 2022","permalink":"/categories/","section":"Categories","summary":"","title":"Categories"},{"content":"","date":"November 15, 2022","permalink":"/categories/documentation/","section":"Categories","summary":"","title":"documentation"},{"content":"","date":"November 15, 2022","permalink":"/tags/hugo/","section":"tags","summary":"","title":"hugo"},{"content":"","date":"November 15, 2022","permalink":"/tags/","section":"tags","summary":"","title":"tags"},{"content":"","date":"November 15, 2022","permalink":"/","section":"","summary":"","title":""},{"content":"","date":"November 15, 2022","permalink":"/posts/","section":"posts","summary":"","title":"posts"},{"content":"I’m a Software tinkerer believing in building software thats simple , easy and adaptable.\nI believe programming is an art that needs to be crafted beautifully. The idea behind this blog is to document my findings, experiments \u0026 know how tales to my digital catalogue.\n","date":"November 15, 2022","permalink":"/about/","section":"","summary":"I’m a Software tinkerer believing in building software thats simple , easy and adaptable.","title":"about"},{"content":"","date":"January 16, 2015","permalink":"/tags/httpserver/","section":"tags","summary":"","title":"httpserver"},{"content":"","date":"January 16, 2015","permalink":"/tags/loadbalancing/","section":"tags","summary":"","title":"loadbalancing"},{"content":"introduction # Nginx(pronounced EngineX) is one of the most popular web servers in the world and is responsible for hosting some of the largest and highest-traffic sites on the internet. It is more resource-friendly than Apache in most cases and can be used as a web server or a reverse proxy.\nI am going to create a Virtual Machine which will run Linux OS in our case Ubuntu Linux 64 bit ( Trusty for version 14.04 ) for sake of mimicking an environment as much close to real production system. I have used Vagrant for managing my virtual machine and provisioning it for I can be saved from hastle of downloading a Ubuntu Linux ISO and installing on newly created Virtual Machine.\nPre-Requisite # Vagrant VirtualBox If you are not familiar with Vagrant ,Please refer to my article on Vagrant \u0026amp; its use here\nAlthough I am provisioning a Ubuntu box , you are free to choose your preference of OS from the list of available Vagrant boxes\nvagrant init ubuntu/trusty64 vagrant up Once this command is initiated the machine will start booting up and you should see something similar to the below command.\nBringing machine 'default' up with 'virtualbox' provider... ==\u0026gt; default: Checking if box 'ubuntu/trusty64' is up to date... ==\u0026gt; default: Resuming suspended VM... ==\u0026gt; default: Booting VM... ==\u0026gt; default: Waiting for machine to boot. This may take a few minutes... default: SSH address: 127.0.0.1:2222 default: SSH username: vagrant default: SSH auth method: private key default: Warning: Connection refused. Retrying... ==\u0026gt; default: Machine booted and ready! You can ssh into the Virtual Machine by using the below command.\nvagrant ssh You can run command to check the ipaddress of the machine using\nifconfig Vagrant assigns a ip address by default from your router or DHCP Server , which is dynamic. But for the sake of experimentation we do not need to go through the details of DHCP Configuration , although we can define out own private network for you to access it on the machine you have created your virtual machine.\nYou can edit your Vagrantfile \u0026amp; uncomment the below line and assign a ip address like 192.168.33.10\nconfig.vm.network \u0026quot;private_network\u0026quot;, ip: \u0026quot;192.168.33.10\u0026quot; Once you do that you should load the recent changed by using the below command\nvagrant reload (or) vagrant halt followed by vagrant start You can continue to use vagrant ssh or ssh manually using below command in terminal or putty( in windows).\nssh vagrant@192.168.33.10 (or) vagrant ssh You should see the same result.\ninstall # I have provisioned a ubuntu box using vagrant and i will go over details of installation of nginx in the provisioned ubuntu linux.\nvagrant@vagrant-ubuntu-trusty-64:~$ sudo apt-get upgrade vagrant@vagrant-ubuntu-trusty-64:~$ sudo apt-get update vagrant@vagrant-ubuntu-trusty-64:~$ sudo apt-get install nginx You should see the nginx server running in the box \u0026amp; you can check if its running by using following command below.\nvagrant@vagrant-ubuntu-trusty-64:~$ ps -ef | grep nginx root 1093 1 0 Jan15 ? 00:00:00 nginx: master process /usr/sbin/nginx www-data 1094 1093 0 Jan15 ? 00:00:24 nginx: worker process www-data 1095 1093 0 Jan15 ? 00:00:00 nginx: worker process www-data 1096 1093 0 Jan15 ? 00:00:26 nginx: worker process www-data 1097 1093 0 Jan15 ? 00:00:26 nginx: worker process vagrant 9206 9185 0 21:31 pts/0 00:00:00 grep --color=auto nginx So now should you go to the browser and type this http://192.168.33.10/\nYou should be able to see nginx serving and displaying something on the browser.\n","date":"January 16, 2015","permalink":"/posts/server/http/nginx/","section":"posts","summary":"introduction # Nginx(pronounced EngineX) is one of the most popular web servers in the world and is responsible for hosting some of the largest and highest-traffic sites on the internet.","title":"nginx"},{"content":"","date":"September 19, 2014","permalink":"/tags/development/","section":"tags","summary":"","title":"development"},{"content":"","date":"September 19, 2014","permalink":"/tags/productivity/","section":"tags","summary":"","title":"productivity"},{"content":"what # Vagrant is an amazing dev productivity tool for managing virtual machines using command line which lets run the virtual machine in headless mode. It is template based and can be extended to a standard box and its fast enough to boot the virtual machine using this tool.\nPlease download vagrant here\nwhy # Before vagrant existed i use to provision a vm for a given OS lets say Linux 64 bit Ubuntu version , I will go about downloading the iso image \u0026amp; installed in a virtual machine and then go about installing other softwares to keep the environment ready for code to be deployed for testing purpose. This ensured i had a linux environment hosting application just as much a smaller subset of production kind of environment ofcourse without benefits of clustering as i thought it was overkill to do development in a clustered environment unless the software or application has cluster aware features.\nThis whole process was time consuming \u0026amp; managing was difficult , but once created it had the same benefits of isolated linux enviornment running app servers or servers. I would probably keep a golden copy of virtual machine hard disk installed with os \u0026amp; export and keep it ready to import for next use into another virutal machine though it had its own issues of lot of time in importing and exporting virtual machine hard disk as OVF file.\nVagrant helped in process of providing a readily available box which can be added to vagrant environment which still uses virtual box but its much faster and quicker to add than import export. Also it helped not just provide base boxes for different OS but also help in running the virtual machines seemlessly in a headless fashion.\nbenefits # The main reasoning to use virtual machine during development is to isolate environments in a seperate container than messing up with different versions of jdk or python etc any sdks or multiple application servers creating conflicts etc \u0026amp; having to support different versions in host machine. I have been a big proponent of developing applications mimicing as much as running in typical isolated environments hosted in linux enviroments just as much finally the shipped product will ultimately run on it.\nOfcourse we can maintain isolation in case of python environments using virtualenv \u0026amp; run different version of jdk in case of java but have to constantly update the java home variable in mac or create a bash or cmd script to set the java home based on the version being used. I liked the idea of not having to manage version dependencies and freeze an environment to do development and not to worry about managing different version of software etc to be installed in host machine \u0026amp; also should i migrate the virtual machine to another machine its straight forward and i can avoid going through process of installation of softwares etc \u0026amp; i can replicate the virtual machine using export options.\nSince i am a big proponent of open source I started using Virtual Box , it solved environment isolation problem \u0026amp; dependency issues aiding in keeping the host machine cleaner with no trace of software version installed for runtime , ofcourse it not entirely true as u need jdks or python versions installed for ide to use and compile code to be deployed for runtime container in vm.\nYou can ofcourse use VMWare solution to provision a VM , i thought it was bulky for development environments. Sometimes u will need VMWare licensed software to run on mac which is what i use.\nhow # Vagrant provides set of already created boxes referred as base boxes.Please feel free to download the vagrant base box here\nYou can download these bases boxes or few vagrant boxes are also provisioned in github projects.\nI will create a vagant box and host in my github to try downloading at some point for reference.\nOnce the base box is downloaded , we go about initializing the vagant file to use the box.\nvagrant init baseboxurl This should create a Vagrant File for you to edit and use to your needs.\nCustomizing the vagrant file for usage\nconfig.vm.box = \u0026quot;\u0026lt;http://baseboxurl\u0026gt;\u0026quot; config.vm.network \u0026quot;private_network\u0026quot;, ip: \u0026quot;192.168.66.66\u0026quot; config.vm.synced_folder \u0026quot;data\u0026quot;, \u0026quot;/data/\u0026quot; This is made part of private network to access the virtual machine using the given ip address \u0026amp; then we create a sync folder between host and virtual machine. So we can transfer any code , downloadables or code artifacts in shared location using host ide and be able to build and deploy easily in virtual machine if administration console is not an option.\nFurther you can add the base box and use it as reference to create another vagrant based virtual machine , the idea of base box is to be used like standard template.\nvagrant add box ubuntubasebox Once the box is avaiable in vagrant we can modify the Vagrant file to start using it directly from vagrant repository than looking up the reference from basebox url.\nconfig.vm.box = \u0026quot;\u0026lt;box name\u0026gt;\u0026quot; Starting the virtual machine using vagrant\nvagrant up Stopping the virtual machine using vagrant\nvagrant halt Once the virtual machine is up and running you can ssh into the ipaddress mentioned above and login to the linux machine.\nusername/password - vagrant/vagrant - root/vagrant Once the container is ready you are free to install the software required and you can export a environment with database , app server , http servers etc and export them into a template \u0026amp; distribute for easy usage.\n","date":"September 19, 2014","permalink":"/posts/development/vagrant/","section":"posts","summary":"what # Vagrant is an amazing dev productivity tool for managing virtual machines using command line which lets run the virtual machine in headless mode.","title":"vagrant"}]